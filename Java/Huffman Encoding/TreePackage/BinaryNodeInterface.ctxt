#BlueJ class context
comment0.target=T\ getData()
comment0.text=Task\:\ Retrieves\ the\ data\ portion\ of\ the\ node.\n@return\ the\ object\ in\ the\ data\ portion\ of\ the\ node\ \n
comment1.params=newData
comment1.target=void\ setData(T)
comment1.text=Task\:\ Sets\ the\ data\ portion\ of\ the\ node.\n@param\ newData\ the\ data\ object\ \n
comment10.target=int\ getHeight()
comment10.text=Task\:\ Computes\ the\ height\ of\ the\ subtree\ rooted\ at\ this\ node.\n@return\ the\ height\ of\ the\ subtree\ rooted\ at\ this\ node\ \n
comment11.target=BinaryNodeInterface<T>\ copy()
comment11.text=Task\:\ Copies\ the\ subtree\ rooted\ at\ this\ node.\n@return\ the\ root\ of\ a\ copy\ of\ the\ subtree\ rooted\ at\ this\ node\ \n
comment2.target=BinaryNodeInterface<T>\ getLeftChild()
comment2.text=Task\:\ Retrieves\ the\ left\ child\ of\ the\ node.\n@return\ the\ node\ that\ is\ this\ node\u2019s\ left\ child\ \n
comment3.target=BinaryNodeInterface<T>\ getRightChild()
comment3.text=Task\:\ Retrieves\ the\ right\ child\ of\ the\ node.\n@return\ the\ node\ that\ is\ this\ node\u2019s\ right\ child\ \n
comment4.params=leftChild
comment4.target=void\ setLeftChild(BinaryNodeInterface<T>)
comment4.text=Task\:\ Sets\ the\ node\u2019s\ left\ child\ to\ a\ given\ node.\n@param\ leftChild\ a\ node\ that\ will\ be\ the\ left\ child\ \n
comment5.params=rightChild
comment5.target=void\ setRightChild(BinaryNodeInterface<T>)
comment5.text=Task\:\ Sets\ the\ node\u2019s\ right\ child\ to\ a\ given\ node.\n@param\ rightChild\ a\ node\ that\ will\ be\ the\ right\ child\ \n
comment6.target=boolean\ hasLeftChild()
comment6.text=Task\:\ Detects\ whether\ the\ node\ has\ a\ left\ child.\n@return\ true\ if\ the\ node\ has\ a\ left\ child\ \n
comment7.target=boolean\ hasRightChild()
comment7.text=Task\:\ Detects\ whether\ the\ node\ has\ a\ right\ child.\n@return\ true\ if\ the\ node\ has\ a\ right\ child\ \n
comment8.target=boolean\ isLeaf()
comment8.text=Task\:\ Detects\ whether\ the\ node\ is\ a\ leaf.\n@return\ true\ if\ the\ node\ is\ a\ leaf\ \n
comment9.target=int\ getNumberOfNodes()
comment9.text=Task\:\ Counts\ the\ nodes\ in\ the\ subtree\ rooted\ at\ this\ node.\n@return\ the\ number\ of\ nodes\ in\ the\ subtree\ rooted\ at\ this\ node\ \n
numComments=12
