#BlueJ class context
comment0.params=
comment0.target=Message()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Message\r\n
comment1.params=s
comment1.target=void\ addLine(java.lang.String)
comment1.text=\r\n\ Add\ a\ new\ string\ to\ the\ Lines.\ \ (don't\ add\ empty\ strings).\r\n\ \r\n\ @param\ \ s\ \ \ a\ string\ \r\n
comment2.params=
comment2.target=boolean\ hasAnotherLine()
comment3.params=
comment3.target=boolean\ hasAnotherCharacterInLine()
comment4.params=
comment4.target=boolean\ hasNext()
comment4.text=\r\n\ Is\ there\ another\ character\ that\ can\ be\ retrieved.\ \ Satisfies\ the\ iterator\ interface.\r\n\ @return\ true\ if\ there\ is\ another\ character\r\n
comment5.params=
comment5.target=void\ remove()
comment5.text=\r\n\ this\ method\ is\ needed\ for\ the\ iterator\ interface,\ but\ it\ is\ not\ implemented\ by\ this\ class\r\n\ \r\n
comment6.params=
comment6.target=void\ reset()
comment6.text=\r\n\ Reset\ the\ message\ buffer\ iteration\ back\ to\ the\ beginning.\r\n
comment7.params=
comment7.target=java.lang.Character\ next()
comment7.text=\r\n\ get\ the\ next\ character\r\n\ if\ the\ end\ of\ a\ line\ has\ been\ reached,\ increment\ the\ current\ line\ and\ set\ the\ current\r\n\ character\ to\ the\ first\ character\ in\ the\ next\ line.Satisfies\ the\ iterator\ interface.\r\n\ \ @return\ the\ next\ character\r\n
comment8.params=g\ leftX\ topY
comment8.target=void\ drawOn(java.awt.Graphics,\ int,\ int)
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=10
