#BlueJ class context
comment0.target=EncodeActionThread
comment0.text=\r\n\ A\ Thread\ that\ contains\ the\ application\ we\ are\ going\ to\ animate\r\n\ \r\n\ @author\ Charles\ Hoot\ \r\n\ @version\ 2.0\r\n
comment1.params=
comment1.target=EncodeActionThread()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ EncodeActionThread\r\n
comment10.params=data
comment10.target=void\ add(TreePackage.HuffmanTree)
comment11.params=c\ codeBuffer\ coder
comment11.target=void\ encodeCharacter(java.lang.Character,\ Code,\ TreePackage.HuffmanTree)
comment11.text=\r\n\ encode\ a\ single\ symbol\ using\ a\ Huffman\ tree\ \r\n\r\n\ @param\ c\ the\ symbol\ to\ be\ encoded.\r\n\ @param\ codeBuffer\ the\ code\ buffer\ where\ the\ code\ characters\ will\ be\ placed\r\n\ @param\ coder\ a\ Huffman\ tree\ used\ to\ encode\ the\ character\r\n
comment12.params=x
comment12.target=java.lang.Character\ intToChar(int)
comment12.text=\r\n\ convert\ an\ integer\ value\ into\ an\ ascii\ character\r\n\r\n\ @param\ x\ the\ integer\ value\r\n\r\n\ @return\ the\ character\ or\ null\ if\ unable\ to\ convert\r\n
comment13.params=c
comment13.target=java.lang.Integer\ charToInt(char)
comment13.text=\r\n\ convert\ a\ character\ into\ an\ ascii\ integer\r\n\r\n\ @param\ c\ the\ character\ value\ to\ convert\r\n\r\n\ @return\ the\ integer\ or\ null\ if\ unable\ to\ convert\r\n
comment14.params=theFileName\ theMessage
comment14.target=void\ loadMessage(java.lang.String,\ Message)
comment14.text=\r\n\ load\ the\ words\ into\ the\ Message\r\n\r\n\ @param\ theFileName\ the\ name\ of\ the\ file\ holding\ the\ message\r\n\r\n\ @param\ theMesage\ the\ object\ to\ load.\r\n
comment15.params=
comment15.target=javax.swing.JPanel\ createAnimationPanel()
comment16.params=
comment16.target=void\ setUpApplicationSpecificControls()
comment17.params=event
comment17.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment18.params=
comment18.target=void\ textNameTextFieldHandler()
comment2.params=
comment2.target=java.lang.String\ getApplicationTitle()
comment3.params=
comment3.target=void\ init()
comment4.params=
comment4.target=void\ executeApplication()
comment5.params=aMessage
comment5.target=int[]\ getCounts(Message)
comment5.text=\r\n\ count\ the\ number\ of\ times\ each\ character\ appears\ in\ the\ message.\ \r\n\r\n\ @param\ aMessage\ an\ object\ that\ holds\ all\ the\ characters\ of\ the\ message\r\n\ to\ be\ encoded.\r\n\ @return\ an\ array\ with\ the\ count\ for\ the\ number\ of\ times\ each\ character\ occurs.\r\n
comment6.params=count
comment6.target=TreePackage.HuffmanTree[]\ getInitialTrees(int[])
comment6.text=\r\n\ create\ the\ initial\ forrest\ of\ trees.\ \r\n\r\n\ @param\ counts\ the\ frequency\ of\ each\ character\r\n\ to\ be\ encoded.\r\n\ @return\ the\ forest\ of\ trees\ for\ each\ single\ letter\r\n
comment7.params=
comment7.target=void\ combineTrees()
comment7.text=\r\n\ reduce\ the\ number\ of\ trees\ in\ the\ forest\ by\ one.\ This\ will\ operate\ by\ side\ effect\r\n\ on\ the\ forest\ of\ trees\ contained\ in\ the\ variable\ myTrees.\r\n\r\n
comment8.params=
comment8.target=int\ minValue()
comment9.params=index
comment9.target=void\ remove(int)
numComments=19
